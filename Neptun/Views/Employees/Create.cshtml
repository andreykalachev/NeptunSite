@model Neptun.Models.ViewModels.EmployeeCreateEditViewModel

@{
    ViewBag.Title = "Create";
}
<div class="container">
    <h3>Добавить работника</h3>


    @using (Html.BeginForm(Html.BeginForm(Html.BeginForm("Create", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))))
    {
        @Html.AntiForgeryToken()

        <div class="mt-5">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Patronymic, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.PhoneNuber, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNuber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNuber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.HttpPostedFilePhoto, new { type = "file", value = "test" })
                </div>
            </div>

            <div class="form-group">
                <div class="offset-md-2 col-md-10">
                    <input type="submit" value="Добавить" class="btn" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Вернуться к списку", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    </div>